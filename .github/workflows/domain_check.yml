name: Domain Status Check

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual triggers

jobs:
  check-domains:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Download previous results
        continue-on-error: true
        run: |
          mkdir -p .data
          if [ -f status.csv ]; then
            cp status.csv .data/
          fi
      
      - name: Check domains
        run: |
          python Checking.py domains.csv status.csv
      
      - name: Create Issue for Changes
        if: contains(steps.check.outputs.stdout, '::warning::')
        uses: actions/github-script@v6
        with:
          script: |
            const output = process.env.CHECK_OUTPUT;
            const changes = output
              .split('\n')
              .filter(line => line.includes('::warning::'))
              .map(line => line.replace('::warning::', ''));
            
            if (changes.length > 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Domain Status Changes - ${new Date().toISOString().split('T')[0]}`,
                body: changes.join('\n'),
                labels: ['status-change']
              });
            }
      
      - name: Commit updated status
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add status.csv
          git commit -m "Update domain status" || exit 0
          git push

      - name: Upload Results
        uses: actions/upload-artifact@v2
        with:
          name: domain-check-results
          path: status.csv
